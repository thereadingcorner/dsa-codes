#include<stdio.h>
#include<conio.h>
struct que
{
	char arr[5];
	int rear, front;
};

typedef struct que Queue;

void initialize(Queue *p)
{
	if(p==NULL)
	{
		printf("Memory not available");
		exit(0);
	}
	p->rear=-1;
	p->front=0;

}

void dispqueue(Queue *p)
{
	int i,n;

	clrscr();
	printf("\n");
	if(isEmpty(p))
	{
		printf("Queue is empty");

	}
	for(i=p->front;i<=p->rear;i++)
			printf("%c  ",p->arr[i]);
}

int isFull(Queue *p)
{
	return(p->rear==4 ? 1:0);
}

int isEmpty(Queue *p)
{
	return(p->rear==-1 && p->front==0 ? 1:0);
}

void enqueue(Queue *p, char v)
{
	if(isFull(p))
	{
		printf("\nQueue overflows");
	}
	p->rear++;
	p->arr[p->rear]=v;
}

char dequeue(Queue *p)
{
	char t;
	if(isEmpty(p))
	{
		printf("\nQueue underflows");
		return '\0';
	}
	
	t=p->arr[p->front];
	p->front++;
	if(p->front>p->rear)
	{
		p->rear=-1;
		p->front=0;
	}
	return(t);
}

int main()
{
	Queue *q;
	char r,v;
	int choice,val;

	q=(Queue *)malloc(sizeof(Queue));
	do
	{
		clrscr();
		printf("\n----Menu----");
		printf("\n1:Initialize queue");
		printf("\n2:Disp queue");
		printf("\n3:Insert an elelement");
		printf("\n4:Delete an element");
		printf("\n5:Exit");
		printf("\nEnter you choice:");
		scanf("%d",&choice);
		switch(choice)
		{
			case 1:
				clrscr();
				initialize(q);
				break;
			case 2:
				clrscr();
				dispqueue(q);
				getch();
				break;
			case 3:
				clrscr();
				fflush(stdin);
				printf("\nEnter value:");
				scanf("%c",&v);
				enqueue(q,v);
				break;
			case 4:
				clrscr();
				r=dequeue(q);
				printf("%c is deleted",r);
				getch();
				break;
			case 5:
				printf("good bye");
				break;
		}
	}while(choice!=5);
	return(1);
}